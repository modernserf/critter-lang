(function(){'use strict';function a(a){const b=a.length-a.trimLeft().length;if(0==b)return a;const c=a.split('\n').map((a)=>a.substr(b-1));return c.join('\n').trim()}const b=(a,b)=>({ok:!0,value:a,nextIndex:b}),c=(...a)=>({ok:!1,errors:a}),d=([a])=>a,e=(a,b,c,d)=>({match:a,index:d});class g{constructor(a){this._parseFn=a}parse(a,b=0){return this._parseFn(a,b)}parseAll(a){const b=m(this,h).map(d).parse(a,0);return b.ok?b.value:null}findMatches(a,b=0){for(const c=u(i,this.map(e)).map(v),d=[];;){const e=c.parse(a,b);if(!e.ok)return d;if(d.push(e.value),b===e.value.index)throw new Error('`findMatches` cannot be used on a parser that does not consume input');b=e.value.index}}map(a){return new g((c,d)=>{const e=this.parse(c,d);return e.ok?b(a(e.value,e,c,d),e.nextIndex):e})}mapError(a){return new g((b,d)=>{const e=this.parse(b,d);return e.ok?e:c(...a(e.errors,b,d))})}}class f extends g{constructor(a){super(a),this._memo=new Map}parse(a,b=0){if(this._memo.has(a)&&this._memo.get(a).has(b))return this._memo.get(a).get(b);this._memo.has(a)||this._memo.set(a,new Map);const c=this._parseFn(a,b);return this._memo.get(a).set(b,c),c}}const h=new g((a,d)=>d===a.length?b(null,d):c('expected_end_of_input',d)),i=new g((a,d)=>d>=a.length?c('unexpected_end_of_input',d):b(a[d],d+1)),j=(a)=>new f((d,e)=>e>=d.length?c('unexpected_end_of_input',e):a(d[e])?b(d[e],e+1):c('no_match',d[e],e));class k extends f{constructor(a){super((a,b)=>this._parseAlts(a,b)),this._setAlts(a)}_setAlts(a){this._alts=a.reduce((a,b)=>b._alts?a.concat(b._alts):a.concat([b]),[])}_parseAlts(a,b){for(const c of this._alts){const d=c.parse(a,b);if(d.ok)return d}return c('no_alts',a[b],b)}}const l=(...a)=>new k(a),m=(...a)=>new f((c,d)=>{const e=[];for(const b of a){const a=b.parse(c,d);if(!a.ok)return a;d=a.nextIndex,e.push(a.value)}return b(e,d)}),n=(a)=>new f((c,d)=>{for(const e=[];;){const f=a.parse(c,d);if(!f.ok)return b(e,d);if(d===f.nextIndex)throw new Error('`all` cannot be used with a parser that does not consume input');d=f.nextIndex,e.push(f.value)}}),o=([a,b])=>[a].concat(b),p=(a)=>m(a,n(a)).map(o),q=((a)=>new g((c,d)=>b(a,d)))([]),r=(a)=>[a],s=(a)=>l(a.map(r),q),t=(a)=>new g((d,e)=>a.parse(d,e).ok?c('should_not_match',e):b(null,e)),u=(a,b)=>m(n(m(t(b),a).map(v)),b),v=([a,b])=>b,w=(...a)=>m(t(l(...a)),i).map(v),x=(a)=>a.join(''),y=(a)=>j((b)=>b===a),z=(a)=>m(...Array.from(a).map(y)).map(x),A=(a,b)=>{const d=a.codePointAt(0),e=b.codePointAt(0);return j((a)=>{if(!a.codePointAt)return!1;const b=a.codePointAt(0);return b>=d&&b<=e})},B=A('0','9'),C=A('A','Z'),D=A('a','z'),E=l(C,D),F=j((a)=>/\s/.test(a)),G=(a)=>[].concat(...a),H=(a)=>(b)=>({type:a,value:b}),I=(a)=>a.join(''),J=p(F),K=m(z(';'),n(w(z('\n'))).map(I)),L=m(z('0x'),p(l(B,A('A','F'),A('a','f'))).map(I)).map(I),M=m(B,n(l(z('_').map(()=>''),B)).map(I)).map(I),N=m(s(z('-')),M,s(m(z('.'),M)).map(G)).map(G).map(I),O=p(w(F,((a)=>l(...Array.from(a).map(y)))('.:#,;@[]{}()]"'))).map(I),P=m(z('#'),O),Q=z('"'),R=z('\\"').map(()=>'"'),S=w(Q),T=n(l(R,S)).map(I),U=m(Q,T,Q),V=l(z('::').map(H('FieldOp')),z(':=').map(H('Assignment')),z(':').map(H('Colon')),z('[').map(H('LBrk')),z(']').map(H('RBrk')),z('{').map(H('LCurly')),z('}').map(H('RCurly')),z('(').map(H('LParen')),z(')').map(H('RParen')),z('@').map(H('At')),z('.').map(H('Dot')),J.map(H('Whitespace')),K.map(H('Comment')),L.map(H('HexNumber')),N.map(H('DecNumber')),P.map(H('TaggedString')),U.map(H('QuotedString')),O.map(H('Ident'))),W=n(V),X=(a)=>W.parseAll(Array.from(a)),Y=(a)=>Array.isArray(a)?G(a).join(''):a,Z=(a)=>X(a).map(({type:a,value:b})=>`<span class="syntax-${a}">${Y(b)}</span>`).join('');window.addEventListener('DOMContentLoaded',()=>{const b=Array.from(document.querySelectorAll('code.language-critter'));b.forEach((b)=>{const c=Z(a(b.textContent));b.innerHTML=c})})})();